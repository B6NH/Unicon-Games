
# Hamurabi

procedure main()

  write(right("*** HAMURABI ***\n",30))

  write("Try your hand at governing ancient Sumeria\n_
         successfully for a 10 year term of office.")

  Babylon().play()

end

# Year, Dead, Total Dead, Immigrants, Population,
# Starvation Percentage, Acres, Yield, Eaten,
# Store, Random yearly yield modifier, Input,
# Acres per person
class Babylon(year,deadTurn,deadTotal,immigrants,population,starvationPercentage,
              acres,yield,eaten,store,yieldModifier,input,acresPerPerson,H)

  method play()

    repeat {

      report()
      buy()
      sell()
      feed()
      plant()
      harvest()

    }

  end

  method report()

    write("\n\nHamurabi: I beg to report to you,")

    # Next year
    year +:= 1

    write("in year ",year,", ", deadTurn, " people starved; ", immigrants,
          " came to the city.")

    # Add immigrants to population
    population +:= immigrants

    # Plague
    if input <= 0 then {
      population /:= 2
      write("A horrible plague struck! Half the people died.")
    }

    write("Population is now ",population,". The city now owns ",
           acres, " acres.")

    write("You harvested ",yield," bushels per acre. Rats ate ",
           eaten, " bushels.")

    write("You now have ",store, " bushels in store.\n")

    if year == 11 then evaluate()

  end

  method buy()

    yieldModifier := ?11-1
    yield := yieldModifier + 17

    write("Land is trading at " , yield, " bushels per acre.")

    repeat {

      writes("How many acres do you wish to buy? ")

      input := integer(read())

      if input < 0 then
        finish("quit")
      else if yield * input <= store then
        return
      else {
        write("Hamurabi: think again. You have only ",store)
        write(" bushels of grain. Now then,")
      }

    }

  end

  method sell()

    if input == 0 then {

      repeat {

        writes("How many acres do you wish to sell?")

        input := integer(read())

        if input < 0 then
          finish("quit")
        else if input < acres then {
          acres -:= input; store +:= yield * input; yieldModifier := 0
          write()
          break
        } else {
          write("Hamurabi: think again. You own only ", acres,
                " acres. Now then,")
        }
      }
    } else {
      acres +:= input ; store -:= yield * input; yieldModifier := 0
      write()
    }

  end

  method feed()

    repeat {

      writes("How many bushels shall we feed your people? ")

      input := integer(read())

      if input < 0 then
        finish("quit")
      else {

        if input <= store then
          break
        else {

          write("Hamurabi: think again. You have only")
          write(store," bushels of grain. Now then,")

        }
      }

      store -:= input
      yieldModifier := 1
      write()

    }

  end

  method plant()

    repeat {
      writes("How many acres do you wish to plant? ")
      deadTurn := integer(read())
      if deadTurn == 0 then
        return
      else if deadTurn < 0 then
        finish("quit")
      else if deadTurn <= acres then {

        if (deadTurn / 2) < store then {

          if (deadTurn < (10 * population)) then {
            store -:= deadTurn / 2
            return
          } else {
            write("but you have only ",population,
                  " people to tend the fields. Now then,")
            next
          }

        } else {
          write("Hamurabi: think again. You have only ",store,
                " bushels of grain. Now then,")
          next
        }

        break

      } else {
        write("Hamurabi: think again. You own only ",acres,
              " acres. Now then,")
      }
    }

  end

  method harvest()

    yieldModifier := integer(?0 * 5 + 1)
    yield := yieldModifier ; H := deadTurn * yield; eaten := 0
    yieldModifier := integer(?0 * 5 + 1)

    # Rats
    if yieldModifier % 2 = 0 then {
      eaten := store / yieldModifier
    }

    store := store - eaten + H
    yieldModifier := ?0 * 5 + 1
    immigrants :=
      integer((yieldModifier * (20 * acres + store) / population / 100 + 1))
    yieldModifier := integer(input / 20)
    input := integer(10 * (2 * ?0 -.3))

    if population > yieldModifier then {
      deadTurn := 0; return
    } else {
      deadTurn := population - yieldModifier
      if deadTurn > .45 * population then {
        write("\nYou starved ",deadTurn," people in one year!")
        finish("fink")
      } else {
        starvationPercentage := ((year - 1) * starvationPercentage +
                                  deadTurn * 100 / population) / year
        population := yieldModifier
        deadTotal +:= deadTurn
        return
      }
    }

  end

  method evaluate()

    write("In your 10-year term of office, ",starvationPercentage,
          " percent of the population starved per year on _
          average, i.e., a total of ",deadTotal," people died!")

    acresPerPerson := acres / population

    write("You started with 10 acres/person and ended with ",
          acresPerPerson," acres/person.\n")

    if starvationPercentage > 33 | acresPerPerson < 7 then
      finish("fink")
    else if starvationPercentage > 10 | acresPerPerson < 9 then
      finish("nero")
    else if starvationPercentage > 3 | acresPerPerson < 10 then
      finish("notbad")
    else
      finish("fantastic")

  end

  method finish(as)

    case as of {

      "quit": {
        write("Hamurabi: I cannot do what you wish.")
        write("Get yourself another steward!")
      }

      "fantastic": {
        write("A fantastic performance! Charlemagne, _
               Disraeli, and Jefferson combined could not _
               have done better!")
      }

      "fink": {
        write("Due to this extreme mismanagement you have _
               not only been impeached and thrown out of _
               office but you have also been declared 'national _
               fink'!")
      }

      "nero": {
        write("Your heavy-handed performance smacks of _
              Nero and Ivan IV. The people (remaining) find _
              you an unpleasant ruler, and frankly, hate _
              your guts!")
      }

      "not bad": {
        write("Your perforemance could have been somewhat _
               better, but really wasn't too bad at all. ",
               integer(population * .8 * ?0), " people would dearly like _
               to see you assassinated but we all have _
               our trivial problems.")
      }

    }

  end

  initially
    year := deadTurn := yieldModifier := deadTotal := starvationPercentage := 0
    population := 95
    store := 2800
    H := 3000
    eaten := H - store
    yield := 3
    acres := H / yield
    immigrants := 5
    input := 1

end
